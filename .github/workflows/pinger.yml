name: Pinger

on:
  schedule:
    - cron: "*/5 * * * *"   # every 5 minutes
  workflow_dispatch:         # allow manual runs

jobs:
  ping:
    runs-on: ubuntu-latest
    steps:
      - name: Ping backend with retry on failure
        env:
          URL: https://cognify-backend-dymx.onrender.com/
          MAX_RETRIES: 5
          RETRY_DELAY: 30
        run: |
          echo "=================================================="
          echo "üîî PING CYCLE STARTED"
          echo "üìÖ Initial attempt time: $(date '+%Y-%m-%d %H:%M:%S %Z')"
          echo "üåê Target URL: $URL"
          echo "üîÑ Max retries: $MAX_RETRIES"
          echo "‚è±Ô∏è  Retry delay: ${RETRY_DELAY}s"
          echo "=================================================="
          echo ""
          
          ATTEMPT=1
          SUCCESS=false
          
          while [ $ATTEMPT -le $MAX_RETRIES ]; do
            echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
            echo "üéØ ATTEMPT #$ATTEMPT of $MAX_RETRIES"
            echo "üìÖ Time: $(date '+%Y-%m-%d %H:%M:%S %Z')"
            echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
            
            # Record start time for this attempt
            START_TIME=$(date +%s)
            
            # Ping the server
            echo "‚è≥ Sending request..."
            RESPONSE=$(curl -s -o /dev/null -w "%{http_code}|%{time_total}" "$URL" --max-time 30 2>&1)
            CURL_EXIT_CODE=$?
            
            # Parse response
            STATUS=$(echo $RESPONSE | cut -d'|' -f1)
            TIME_TAKEN=$(echo $RESPONSE | cut -d'|' -f2)
            
            echo ""
            echo "üìä RESPONSE DETAILS:"
            echo "   Status Code: $STATUS"
            echo "   Response Time: ${TIME_TAKEN}s"
            echo "   Curl Exit Code: $CURL_EXIT_CODE"
            echo ""
            
            # Check if server is alive
            if [ "$CURL_EXIT_CODE" -eq 0 ] && { [ "$STATUS" -eq 200 ] || [ "$STATUS" -eq 404 ] || [ "$STATUS" -eq 307 ]; }; then
              echo "‚úÖ SUCCESS: Server is AWAKE and responding!"
              echo ""
              echo "üìà STATISTICS:"
              echo "   - Attempts needed: $ATTEMPT"
              echo "   - Total time: $(($(date +%s) - START_TIME))s"
              echo "   - Server status: HEALTHY"
              echo ""
              echo "‚è±Ô∏è  TIMING INFO:"
              echo "   - Current interval: 5 minutes"
              echo "   - Server stays alive: ~15 minutes after this ping"
              echo "   - Safety buffer: 10 minutes"
              echo "   - Next scheduled ping: 5 minutes from now"
              SUCCESS=true
              break
              
            elif [ "$STATUS" -eq 000 ] || [ -z "$STATUS" ] || [ "$CURL_EXIT_CODE" -ne 0 ]; then
              echo "‚ùå FAILURE: Server NOT responding"
              echo "   Possible reasons:"
              echo "   - Server is in cold start (waking up)"
              echo "   - Server is completely asleep"
              echo "   - Network timeout"
              echo ""
              
              if [ $ATTEMPT -lt $MAX_RETRIES ]; then
                echo "üîÑ RETRY SCHEDULED"
                echo "   Waiting ${RETRY_DELAY}s before attempt #$((ATTEMPT + 1))..."
                echo "   Reason: Give server time to wake up from cold start"
                echo ""
                sleep $RETRY_DELAY
                ATTEMPT=$((ATTEMPT + 1))
              else
                echo "‚õî MAX RETRIES REACHED"
                echo "   Failed after $MAX_RETRIES attempts"
                echo "   Server may be down or experiencing issues"
                echo ""
                break
              fi
              
            else
              echo "‚ö†Ô∏è  WARNING: Unexpected status code $STATUS"
              echo "   But server responded, so it's awake!"
              SUCCESS=true
              break
            fi
          done
          
          echo ""
          echo "=================================================="
          echo "üìã PING CYCLE SUMMARY"
          echo "=================================================="
          echo "Status: $([ "$SUCCESS" = true ] && echo "‚úÖ SUCCESS" || echo "‚ùå FAILED")"
          echo "Total Attempts: $ATTEMPT"
          echo "Completed at: $(date '+%Y-%m-%d %H:%M:%S %Z')"
          echo "=================================================="
          echo ""
          
          # Exit with appropriate code
          if [ "$SUCCESS" = true ]; then
            echo "üéâ Server is alive and will stay awake!"
            echo "   Next ping in 5 minutes to maintain uptime"
            exit 0
          else
            echo "üíî Unable to wake server after $MAX_RETRIES attempts"
            echo "   Manual intervention may be required"
            echo "   Check Render dashboard for server status"
            exit 1
          fi